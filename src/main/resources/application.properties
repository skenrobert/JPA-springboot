# ===============================
# = DATA SOURCE
# ===============================
## default connection pool
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5

# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/university
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

#spring.jpa.database=university


#I change that configuration no working with postgres
#spring.datasource.url=jdbc:mysql://localhost:3306/university
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.generate-ddl=true


# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy


#http://localhost:9081/api/v2/universidad/carreras
#Costum server tomcat.
server.port=9081
server.connection-timeout=5s
server.tomcat.thread.max=200
server.error.include-message=always
server.servlet.context-path=/api/v2/universidad

app.controller.enable-dto=true